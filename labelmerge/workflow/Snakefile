# ---- begin snakebids boilerplate ----------------------------------------------

from functools import partial

import snakebids
from snakebids import bids


configfile: "config/snakebids.yml"


base_inputs = config["pybids_inputs"].copy()
base_inputs["labelmap"]["filters"]["desc"] = (
    config.get("base_desc") if config.get("base_desc") else False
)
overlay_inputs = config["pybids_inputs"].copy()
overlay_inputs["labelmap"]["filters"]["desc"] = (
    config.get("overlay_desc") if config.get("overlay_desc") else False
)


generate_labelmap = partial(
    snakebids.generate_inputs,
    pybids_config=["bids", "derivatives"],
    derivatives=config["derivatives"],
    participant_label=config["participant_label"],
    use_bids_inputs=True,
)
inputs = generate_labelmap(bids_dir=config["bids_dir"], pybids_inputs=base_inputs)
overlay = generate_labelmap(
    bids_dir=config["overlay_bids_dir"], pybids_inputs=overlay_inputs
)


# this adds constraints to the bids naming
wildcard_constraints:
    **snakebids.get_wildcard_constraints(config["pybids_inputs"]),


# ---- end snakebids boilerplate ------------------------------------------------


# Rules
include: "rules/label_harmonization.smk"


rule all:
    input:
        expand(
            expand(rules.aggregate.output[0], desc="combined", allow_missing=True),
            zip,
            **inputs["labelmap"].input_zip_lists
        ),
    default_target: True
